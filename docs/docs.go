// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/user/CreateUser": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Add New User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "Name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Mobile number",
                        "name": "Phone",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "Email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Enter password",
                        "name": "Password",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Enter password again",
                        "name": "rePassword",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/DeleteUser": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Delete Exist User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Deleted ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/GetUserList": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "All Users",
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/UpdateUser": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update User Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "Name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "Password",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Phone",
                        "name": "Phone",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "Email",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "code\", \"message\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
